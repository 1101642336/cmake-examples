{"name":"Cmake-examples","tagline":"Useful CMake Examples","body":"# CMake Examples\r\n\r\n## Introduction\r\n\r\n[CMake](https://cmake.org/) is a cross-platform open-source meta-build system which can build, test and package\r\nsoftware. It can be used to support multiple native build environments including\r\nmake, Apple's xcode and Microsoft Visual Studio.\r\n\r\nThe [cmake-examples reposiory](https://github.com/ttroy50/cmake-examples) includes some example CMake configurations which I have picked up\r\nwhen exploring it's usage for various projects. The examples are laid out in a tutorial like format.\r\nThe first examples are very basic and slowly increase in complexity drawing on previous examples to show\r\nmore complex use cases.\r\n\r\nThese examples have been tested on Ubuntu 14.04 but should work under any Linux system that supports CMake.\r\n\r\n## Requirements\r\n\r\nThe basic requirements for most examples are:\r\n\r\n* CMake\r\n* A c++ compiler [defaults to gcc)\r\n* make\r\n\r\nThe easiest way to install the above on Ubuntu is as follows\r\n\r\n```\r\n$ sudo apt-get install build-essential\r\n$ sudo apt-get install cmake\r\n```\r\n\r\nSome specific examples may require other tools including:\r\n\r\n* [boost](http://www.boost.org/)\r\n\r\n  $ sudo apt-get libboost-all-dev\r\n\r\n* [protobuf](https://github.com/google/protobuf)\r\n\r\n  $ sudo apt-get install libprotobuf-dev\r\n  $ sudo apt-get install protobuf-compiler\r\n\r\n* [cppcheck](http://cppcheck.sourceforge.net/)\r\n\r\n  $ sudo apt-get install cppcheck\r\n\r\n\r\n## Other Links\r\n\r\nThere are many CMake tutorials and examples online. The list below includes links\r\nto some of these which I have found helpful in my CMake journey.\r\n\r\n  * [Official CMake Tutorial](https://cmake.org/cmake-tutorial/)\r\n  * [Official CMake Wiki](https://cmake.org/Wiki/Main_Page)\r\n  * [CMake Useful Variables](https://cmake.org/Wiki/CMake_Useful_Variables)\r\n  * [Derek Molloy - Intro to CMake](http://derekmolloy.ie/hello-world-introductions-to-cmake/)\r\n  * [Modular C++ Projects](http://techminded.net/blog/modular-c-projects-with-cmake.html)\r\n  * [Common CMake Anti-Patterns](http://voices.canonical.com/jussi.pakkanen/2013/03/26/a-list-of-common-cmake-antipatterns/)\r\n  * [Using clang static analyser with CMake](http://baptiste-wicht.com/posts/2014/04/install-use-clang-static-analyzer-cmake.html)\r\n  * [Static Analysis with CDash](https://cmake.org/pipermail/cmake/2011-April/043709.html) - Includes some info about using CppCheck with CMake\r\n  * [CppCheck Targets](https://www.openfoundry.org/svn/cms/trunk/cmake/CppcheckTargets.cmake)\r\n  * [CMake Tips](https://samthursfield.wordpress.com/2015/10/20/some-cmake-tips/)\r\n  * [John Lamp - CMake Tutorial](https://www.johnlamp.net/cmake-tutorial.html)\r\n","google":"UA-70963107-1","note":"Don't delete this file! It's used internally to help with page regeneration."}